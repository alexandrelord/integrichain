openapi: 3.0.0
info:
  title: "Integrichain API"
  description: "Integrichain technical test"
  version: 1.0.0

servers:
 - url: "/api"

components:
  schemas:
    Book:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        read:
          type: boolean
          default: false
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string

paths:
  /books:
    get:
      operationId: "books.read_all"
      tags:
        - "Books"
      summary: "Read the list of books"
      responses:
        "200":
          description: "Successfully read books list"
        "404":
          description: "No books found"
    post:
      operationId: "books.create"
      tags:
        - "Books"
      summary: "Create a new book"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: "book"
              $ref: "#/components/schemas/Book"
      responses:
        "201":
          description: "Successfully created book"
        "409":
          description: "Book already exists"
  /books/{id}:
    get:
      operationId: "books.read_one"
      tags:
        - "Books"
      summary: "Read a book"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Successfully read book"
        "404":
          description: "Book not found"
    put:
      operationId: "books.update"
      tags:
        - "Books"
      summary: "Update a book"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: "book"
              $ref: "#/components/schemas/Book"
      responses:
        "204":
          description: "Successfully updated book"
        "404":
          description: "Book not found"
    delete:
      operationId: "books.delete"
      tags:
        - "Books"
      summary: "Delete a book"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Successfully deleted book"
        "404":
          description: "Book not found"